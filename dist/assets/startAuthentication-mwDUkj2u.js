import{b as w,W as s,i as g,t as m,a as R,c as E,d as r,e as y}from"./toAuthenticatorAttachment-BAxCDoik.js";function S(){if(!w())return u.stubThis(new Promise(t=>t(!1)));const e=globalThis.PublicKeyCredential;return e?.isConditionalMediationAvailable===void 0?u.stubThis(new Promise(t=>t(!1))):u.stubThis(e.isConditionalMediationAvailable())}const u={stubThis:e=>e};function O({error:e,options:t}){const{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if(e.name==="AbortError"){if(t.signal instanceof AbortSignal)return new s({message:"Authentication ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else{if(e.name==="NotAllowedError")return new s({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if(e.name==="SecurityError"){const l=globalThis.location.hostname;if(g(l)){if(n.rpId!==l)return new s({message:`The RP ID "${n.rpId}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else return new s({message:`${globalThis.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e})}else if(e.name==="UnknownError")return new s({message:"The authenticator was unable to process the specified options, or could not create a new assertion signature",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}async function T(e){!e.optionsJSON&&e.challenge&&(console.warn("startAuthentication() was not called correctly. It will try to continue with the provided options, but this call should be refactored to use the expected call structure instead. See https://simplewebauthn.dev/docs/packages/browser#typeerror-cannot-read-properties-of-undefined-reading-challenge for more information."),e={optionsJSON:e});const{optionsJSON:t,useBrowserAutofill:n=!1,verifyBrowserAutofillInput:l=!0}=e;if(!w())throw new Error("WebAuthn is not supported in this browser");let c;t.allowCredentials?.length!==0&&(c=t.allowCredentials?.map(m));const d={...t,challenge:R(t.challenge),allowCredentials:c},i={};if(n){if(!await S())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete$='webauthn']").length<1&&l)throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');i.mediation="conditional",d.allowCredentials=[]}i.publicKey=d,i.signal=E.createNewAbortSignal();let a;try{a=await navigator.credentials.get(i)}catch(f){throw O({error:f,options:i})}if(!a)throw new Error("Authentication was not completed");const{id:b,rawId:p,response:o,type:A}=a;let h;return o.userHandle&&(h=r(o.userHandle)),{id:b,rawId:r(p),response:{authenticatorData:r(o.authenticatorData),clientDataJSON:r(o.clientDataJSON),signature:r(o.signature),userHandle:h},type:A,clientExtensionResults:a.getClientExtensionResults(),authenticatorAttachment:y(a.authenticatorAttachment)}}export{T as s};
