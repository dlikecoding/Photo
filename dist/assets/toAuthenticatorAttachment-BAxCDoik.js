function f(r){const e=new Uint8Array(r);let t="";for(const n of e)t+=String.fromCharCode(n);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function l(r){const e=r.replace(/-/g,"+").replace(/_/g,"/"),t=(4-e.length%4)%4,o=e.padEnd(e.length+t,"="),n=atob(o),s=new ArrayBuffer(n.length),i=new Uint8Array(s);for(let a=0;a<n.length;a++)i[a]=n.charCodeAt(a);return s}function h(){return c.stubThis(globalThis?.PublicKeyCredential!==void 0&&typeof globalThis.PublicKeyCredential=="function")}const c={stubThis:r=>r};function d(r){const{id:e}=r;return{...r,id:l(e),transports:r.transports}}function g(r){return r==="localhost"||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(r)}class A extends Error{constructor({message:e,code:t,cause:o,name:n}){super(e,{cause:o}),Object.defineProperty(this,"code",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.name=n??o.name,this.code=t}}class u{constructor(){Object.defineProperty(this,"controller",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}createNewAbortSignal(){if(this.controller){const t=new Error("Cancelling existing WebAuthn API call for new one");t.name="AbortError",this.controller.abort(t)}const e=new AbortController;return this.controller=e,e.signal}cancelCeremony(){if(this.controller){const e=new Error("Manually cancelling existing WebAuthn API call");e.name="AbortError",this.controller.abort(e),this.controller=void 0}}}const p=new u,b=["cross-platform","platform"];function w(r){if(r&&!(b.indexOf(r)<0))return r}export{A as W,l as a,h as b,p as c,f as d,w as e,g as i,d as t};
